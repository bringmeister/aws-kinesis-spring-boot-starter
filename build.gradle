buildscript {
    ext {
        versions = [
                kotlin    : '1.2.51',
                springBoot: '1.5.8.RELEASE',
                kinesis   : '1.8.10',
                awsSdk    : '1.11.280',
                jackson   : '2.9.2'
        ]
    }

    ext["mockito.version"] = "2.13.0"

    ext.allRepositories = {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    repositories(allRepositories)

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${versions.kotlin}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
    }
}

configurations.all {
    resolutionStrategy {

        failOnVersionConflict()

        force "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
        force 'commons-logging:commons-logging:1.2'
        force "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
        force 'org.mockito:mockito-core:2.8.9'
        force 'org.slf4j:jcl-over-slf4j:1.7.25'
        force 'org.slf4j:slf4j-api:1.7.25'
        force 'commons-io:commons-io:2.5'
        force 'commons-codec:commons-codec:1.10'
        force 'com.amazonaws:aws-java-sdk-core:1.11.280'
        force 'com.amazonaws:jmespath-java:1.11.280'
        force 'javax.validation:validation-api:2.0.1.Final'
        force 'com.fasterxml.jackson.core:jackson-databind:2.9.2'
        force 'com.fasterxml.jackson.core:jackson-core:2.9.2'
        force 'org.assertj:assertj-core:3.9.1'
    }
}

allprojects {
    repositories(allRepositories)
}
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: "jacoco"
apply plugin: "com.github.kt3k.coveralls"

apply from: "build-scripts/integration-tests.gradle"
group = 'de.bringmeister'
version = '0.1.2'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    compile "org.springframework.boot:spring-boot-autoconfigure:${versions.springBoot}"
    compile "org.springframework.boot:spring-boot-configuration-processor:${versions.springBoot}"
    compile "com.amazonaws:aws-java-sdk-sts:${versions.awsSdk}"
    compile "com.amazonaws:amazon-kinesis-client:${versions.kinesis}"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "javax.validation:validation-api:2.0.1.Final"

    testCompile "org.hibernate:hibernate-validator:6.0.11.Final"
    testCompile "org.springframework.boot:spring-boot-starter-test:1.5.8.RELEASE"
    testCompile "commons-logging:commons-logging"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testCompile "com.natpryce:hamkrest:1.4.2.2"
    testCompile "org.yaml:snakeyaml:1.20"
    testCompile "org.testcontainers:testcontainers:1.6.0"
    testCompile "org.springframework.boot:spring-boot-starter-log4j2:1.5.8.RELEASE"
    testCompile "com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jackson}"
    testCompile "org.assertj:assertj-core:3.9.1"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/WorkerFactory**",
                    "**/local/**"
            ])
        })
    }
}

coveralls {
    // Add kotlin source dir, since the coveralls plugin needs the sources and
    // does not pick it up automatically.
    // See https://github.com/kt3k/coveralls-gradle-plugin/issues/63
    sourceDirs += ['src/main/kotlin']
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}